# Generated by Django 3.1.12 on 2025-03-18 18:39

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('modelApp', '0005_event'),
    ]

    operations = [
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'chatMessage',
            },
        ),
        migrations.CreateModel(
            name='PollOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=255)),
                ('votes', models.PositiveIntegerField(default=0)),
            ],
            options={
                'db_table': 'pollOption',
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('location', models.CharField(blank=True, max_length=255)),
                ('capacity', models.PositiveIntegerField(default=0)),
                ('session_type', models.CharField(choices=[('presentation', 'Presentation'), ('workshop', 'Workshop'), ('panel', 'Panel'), ('networking', 'Networking'), ('breakout', 'Breakout')], max_length=20)),
                ('materials', models.TextField(blank=True)),
                ('track', models.CharField(blank=True, max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('attendees', models.ManyToManyField(blank=True, related_name='sessions_attending', to='modelApp.User')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='modelApp.event')),
                ('speaker', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='modelApp.user')),
            ],
            options={
                'db_table': 'session',
            },
        ),
        migrations.CreateModel(
            name='TicketType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('available_from', models.DateTimeField()),
                ('available_until', models.DateTimeField()),
                ('discount_code', models.CharField(blank=True, max_length=50)),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('allow_access_to', models.ManyToManyField(blank=True, to='modelApp.Session')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='modelApp.event')),
            ],
            options={
                'db_table': 'ticketType',
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purchase_date', models.DateTimeField(auto_now_add=True)),
                ('ticket_number', models.CharField(max_length=255, unique=True)),
                ('qr_code', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('used', 'Used'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], default='active', max_length=10)),
                ('checked_in', models.BooleanField(default=False)),
                ('check_in_time', models.DateTimeField(blank=True, null=True)),
                ('payment_reference', models.CharField(blank=True, max_length=255)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='modelApp.event')),
                ('ticket_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='modelApp.tickettype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='modelApp.user')),
            ],
            options={
                'db_table': 'ticket',
            },
        ),
        migrations.CreateModel(
            name='Poll',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=255)),
                ('is_multiple_choice', models.BooleanField(default=False)),
                ('duration', models.PositiveIntegerField(default=60)),
                ('status', models.CharField(choices=[('active', 'Active'), ('closed', 'Closed')], default='active', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('ends_at', models.DateTimeField()),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='polls_created', to='modelApp.user')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='modelApp.event')),
                ('options', models.ManyToManyField(to='modelApp.PollOption')),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='modelApp.session')),
                ('voters', models.ManyToManyField(blank=True, related_name='polls_voted', to='modelApp.User')),
            ],
            options={
                'db_table': 'poll',
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField()),
                ('comments', models.TextField(blank=True)),
                ('content_quality', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('speaker_quality', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('venue_quality', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('organization_quality', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('would_recommend', models.BooleanField(default=False)),
                ('improvement_suggestions', models.TextField(blank=True)),
                ('is_anonymous', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='modelApp.event')),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='modelApp.session')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='modelApp.user')),
            ],
            options={
                'db_table': 'feedback',
            },
        ),
        migrations.CreateModel(
            name='ChatRoom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('is_private', models.BooleanField(default=False)),
                ('is_direct', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='modelApp.event')),
                ('messages', models.ManyToManyField(blank=True, to='modelApp.ChatMessage')),
                ('participants', models.ManyToManyField(blank=True, to='modelApp.User')),
            ],
            options={
                'db_table': 'chatRoom',
            },
        ),
        migrations.AddField(
            model_name='chatmessage',
            name='chat_room',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_messages', to='modelApp.chatroom'),
        ),
        migrations.AddField(
            model_name='chatmessage',
            name='sender',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='modelApp.user'),
        ),
    ]
